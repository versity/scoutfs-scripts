#!/bin/bash

# Single-node fencing script
function usage() {
    local program

    program=$(basename "$0")
    echo "Usage: $program [-h|--help] [-d|--debug] -t|--test -i|--ip IP -r|--rid RID | SCOUTFS_FENCED_REQ_IP SCOUTFS_FENCED_REQ_RID"

    exit "$1"
}

# Variables set by ScoutFS when fencing host
export IP="$SCOUTFS_FENCED_REQ_IP"
export RID="$SCOUTFS_FENCED_REQ_RID"

LOGGER="/bin/logger -p local3.crit -t scoutfs-fenced"
IPMITEST="false"

echo_error() {
    $LOGGER "ERROR:" "$@"
}

echo_warn() {
    $LOGGER "WARNING:" "$@"
}

echo_fail() {
    $LOGGER "ERROR:" "$@"
    exit 1
}

echo_retry() {
    $LOGGER "ERROR:" "$@"
}

echo_log() {
    $LOGGER "INFO:" "$@"
}

echo_test_pass() {
    echo -e "PASS -" "$@"
}

echo_test_fail() {
    echo -e "FAIL -" "$@"
}

while :; do
    case "$1" in
        -h|--help)
            usage 0
            shift
            ;;
        -d|--debug)
            set -x
            shift
            ;;
        -t|--test)
            IPMITEST="true"
            shift
            ;;
        -i|--ip)
            SCOUTFS_FENCED_REQ_IP="$2"
            IP="$2"
            shift
            shift
            ;;
        -r|--rid)
            SCOUTFS_FENCED_REQ_RID="$2"
            RID="$2"
            shift
            shift
            ;;
        *)
            break
            ;;
    esac
done

echo_log "fence script invoked: IP: $SCOUTFS_FENCED_REQ_IP RID: $SCOUTFS_FENCED_REQ_RID TEST: $IPMITEST"

if [[ -z "$IP" || -z "$RID" ]]
then
    if [[ "$IPMITEST" = "true" ]]; then
        echo_test_fail "no IP or RID given for fence request"
        usage 1
    else
        echo_fail "no IP or RID given for fence request"
    fi
fi

OUTPUT=$(echo BEGIN; LC_ALL=C egrep -m 1 "(^0x*|^$RID$)" /sys/kernel/boot_params/version /sys/fs/scoutfs/f*r*/rid; echo END)

REGEX="rid:$RID"
if [[ "$OUTPUT" =~ $REGEX ]]; then
    if [[ "$IPMITEST" = "true" ]]; then
        echo_test_pass "rid $RID still mounted"
        exit 0
    else
        echo_log "rid $RID still mounted, unmount or reboot system to clear mount"
        exit 1
    fi
else
    if [[ "$IPMITEST" = "true" ]]; then
        echo_test_pass "rid $RID not mounted"
        exit 0
    fi
fi

echo_log "fence host $IP success (rid $RID not mounted)"
exit 0
